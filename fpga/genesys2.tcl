#*****************************************************************************************
# Vivado (TM) v2019.2 (64-bit)
#
# genesys2.tcl: Tcl script for re-creating project 'genesys2'
#
# Generated by Vivado on Mon Mar 30 20:47:06 EDT 2020
# IP Build 2700528 on Thu Nov  7 00:09:20 MST 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (genesys2.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/dkasza/projects/9444/fpga/projects/genesys2/genesys2.srcs/sources_1/bd/main/hdl/main_wrapper.v"
#    "/home/dkasza/projects/9444/fpga/projects/genesys2/genesys2.srcs/sources_1/bd/main/ip/main_mig_7series_0_1/mig_a.prj"
#    "/home/dkasza/projects/9444/fpga/projects/genesys2/genesys2.srcs/sources_1/bd/main/ip/main_mig_7series_0_1/mig_b.prj"
#    "/home/dkasza/projects/9444/fpga/projects/genesys2/genesys2.srcs/constrs_1/new/main.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/dkasza/projects/9444/firmware/xilinx-fpga/firmware.coe"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "genesys2"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "genesys2.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/projects/genesys2"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7k325tffg900-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "digilentinc.com:genesys2:part0:1.1" -objects $obj
set_property -name "board_part_repo_paths" -value "[file normalize "$origin_dir/../../../.Xilinx/Vivado/2019.2/xhub/board_store"]" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "genesys2" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/../peripherals/trivial_ps2"] [file normalize "$origin_dir/../peripherals/simple_vga"] [file normalize "$origin_dir/../cpu"] [file normalize "$origin_dir/../peripherals/trivial_plic"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../firmware/xilinx-fpga/firmware.coe"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/projects/genesys2/genesys2.srcs/sources_1/bd/main/hdl/main_wrapper.v" ]\
 [file normalize "${origin_dir}/projects/genesys2/genesys2.srcs/sources_1/bd/main/ip/main_mig_7series_0_1/mig_a.prj" ]\
 [file normalize "${origin_dir}/projects/genesys2/genesys2.srcs/sources_1/bd/main/ip/main_mig_7series_0_1/mig_b.prj" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "main_mig_7series_0_1/mig_a.prj"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "scoped_to_cells" -value "main_mig_7series_0_1" -objects $file_obj

set file "main_mig_7series_0_1/mig_b.prj"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "scoped_to_cells" -value "main_mig_7series_0_1" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "main_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/projects/genesys2/genesys2.srcs/constrs_1/new/main.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "new/main.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[get_files *new/main.xdc]" -objects $obj
set_property -name "target_ucf" -value "[get_files *new/main.xdc]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "main_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added


# Proc to create BD main
proc cr_bd_main { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name main

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  dkasza.com:CPU9444:CPU9444:see_git\
  dkasza.com:CPU9444:SimpleVGA:see_git\
  dkasza.com:CPU9444:TrivialPLIC:see_git\
  dkasza.org:CPU9444:TrivialPS2:see_git\
  xilinx.com:ip:axi_bram_ctrl:4.1\
  xilinx.com:ip:axi_quad_spi:3.2\
  xilinx.com:ip:axi_uartlite:2.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:mig_7series:4.2\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:xlslice:1.0\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }


##################################################################
# MIG PRJ FILE TCL PROCs
##################################################################

proc write_mig_file_main_mig_7series_0_1 { str_mig_prj_filepath } {

   file mkdir [ file dirname "$str_mig_prj_filepath" ]
   set mig_prj_file [open $str_mig_prj_filepath  w+]

   puts $mig_prj_file {﻿<?xml version="1.0" encoding="UTF-8" standalone="no" ?>}
   puts $mig_prj_file {<Project NoOfControllers="1">}
   puts $mig_prj_file {  }
   puts $mig_prj_file {<!-- IMPORTANT: This is an internal file that has been generated by the MIG software. Any direct editing or changes made to this file may result in unpredictable behavior or data corruption. It is strongly advised that users do not edit the contents of this file. Re-run the MIG GUI with the required settings if any of the options provided below need to be altered. -->}
   puts $mig_prj_file {  <ModuleName>main_mig_7series_0_1</ModuleName>}
   puts $mig_prj_file {  <dci_inouts_inputs>1</dci_inouts_inputs>}
   puts $mig_prj_file {  <dci_inputs>1</dci_inputs>}
   puts $mig_prj_file {  <Debug_En>OFF</Debug_En>}
   puts $mig_prj_file {  <DataDepth_En>1024</DataDepth_En>}
   puts $mig_prj_file {  <LowPower_En>OFF</LowPower_En>}
   puts $mig_prj_file {  <XADC_En>Enabled</XADC_En>}
   puts $mig_prj_file {  <TargetFPGA>xc7k325t-ffg900/-2</TargetFPGA>}
   puts $mig_prj_file {  <Version>4.2</Version>}
   puts $mig_prj_file {  <SystemClock>Differential</SystemClock>}
   puts $mig_prj_file {  <ReferenceClock>Use System Clock</ReferenceClock>}
   puts $mig_prj_file {  <SysResetPolarity>ACTIVE LOW</SysResetPolarity>}
   puts $mig_prj_file {  <BankSelectionFlag>FALSE</BankSelectionFlag>}
   puts $mig_prj_file {  <InternalVref>0</InternalVref>}
   puts $mig_prj_file {  <dci_hr_inouts_inputs>50 Ohms</dci_hr_inouts_inputs>}
   puts $mig_prj_file {  <dci_cascade>0</dci_cascade>}
   puts $mig_prj_file {  <Controller number="0">}
   puts $mig_prj_file {    <MemoryDevice>DDR3_SDRAM/Components/MT41J256m16XX-107</MemoryDevice>}
   puts $mig_prj_file {    <TimePeriod>1250</TimePeriod>}
   puts $mig_prj_file {    <VccAuxIO>1.8V</VccAuxIO>}
   puts $mig_prj_file {    <PHYRatio>4:1</PHYRatio>}
   puts $mig_prj_file {    <InputClkFreq>200</InputClkFreq>}
   puts $mig_prj_file {    <UIExtraClocks>1</UIExtraClocks>}
   puts $mig_prj_file {    <MMCM_VCO>800</MMCM_VCO>}
   puts $mig_prj_file {    <MMCMClkOut0> 7.250</MMCMClkOut0>}
   puts $mig_prj_file {    <MMCMClkOut1>1</MMCMClkOut1>}
   puts $mig_prj_file {    <MMCMClkOut2>1</MMCMClkOut2>}
   puts $mig_prj_file {    <MMCMClkOut3>1</MMCMClkOut3>}
   puts $mig_prj_file {    <MMCMClkOut4>1</MMCMClkOut4>}
   puts $mig_prj_file {    <DataWidth>32</DataWidth>}
   puts $mig_prj_file {    <DeepMemory>1</DeepMemory>}
   puts $mig_prj_file {    <DataMask>1</DataMask>}
   puts $mig_prj_file {    <ECC>Disabled</ECC>}
   puts $mig_prj_file {    <Ordering>Normal</Ordering>}
   puts $mig_prj_file {    <BankMachineCnt>8</BankMachineCnt>}
   puts $mig_prj_file {    <CustomPart>FALSE</CustomPart>}
   puts $mig_prj_file {    <NewPartName/>}
   puts $mig_prj_file {    <RowAddress>15</RowAddress>}
   puts $mig_prj_file {    <ColAddress>10</ColAddress>}
   puts $mig_prj_file {    <BankAddress>3</BankAddress>}
   puts $mig_prj_file {    <MemoryVoltage>1.5V</MemoryVoltage>}
   puts $mig_prj_file {    <C0_MEM_SIZE>1073741824</C0_MEM_SIZE>}
   puts $mig_prj_file {    <UserMemoryAddressMap>ROW_BANK_COLUMN</UserMemoryAddressMap>}
   puts $mig_prj_file {    <PinSelection>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AC12" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AB8" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[10]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AA8" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[11]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AB12" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[12]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AA12" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[13]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AH9" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[14]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AE8" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AD8" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AC10" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[3]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AD9" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[4]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AA13" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[5]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AA10" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[6]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AA11" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[7]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="Y10" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[8]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="Y11" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_addr[9]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AE9" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_ba[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AB10" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_ba[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AC11" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_ba[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AF11" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_cas_n"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="AC9" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_ck_n[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="AB9" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_ck_p[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AJ9" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_cke[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AH12" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_cs_n[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AD4" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dm[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AF3" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dm[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AH4" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dm[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AF8" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dm[3]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AD3" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AF1" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[10]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AE4" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[11]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AE3" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[12]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AE5" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[13]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AF5" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[14]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AF6" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[15]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AJ4" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[16]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AH6" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[17]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AH5" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[18]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AH2" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[19]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AC2" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AJ2" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[20]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AJ1" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[21]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AK1" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[22]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AJ3" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[23]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AF7" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[24]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AG7" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[25]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AJ6" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[26]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AK6" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[27]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AJ8" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[28]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AK8" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[29]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AC1" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AK5" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[30]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AK4" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[31]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AC5" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[3]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AC4" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[4]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AD6" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[5]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AE6" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[6]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AC7" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[7]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AF2" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[8]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15_T_DCI" PADName="AE1" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dq[9]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AD1" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dqs_n[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AG3" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dqs_n[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AH1" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dqs_n[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AJ7" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dqs_n[3]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AD2" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dqs_p[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AG4" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dqs_p[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AG2" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dqs_p[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15_T_DCI" PADName="AH7" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_dqs_p[3]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AK9" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_odt[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AE11" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_ras_n"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="LVCMOS15" PADName="AG5" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_reset_n"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AG13" SLEW="" VCCAUX_IO="NORMAL" name="ddr3_we_n"/>}
   puts $mig_prj_file {    </PinSelection>}
   puts $mig_prj_file {    <System_Clock>}
   puts $mig_prj_file {      <Pin Bank="33" PADName="AD12/AD11(CC_P/N)" name="sys_clk_p/n"/>}
   puts $mig_prj_file {    </System_Clock>}
   puts $mig_prj_file {    <System_Control>}
   puts $mig_prj_file {      <Pin Bank="Select Bank" PADName="No connect" name="sys_rst"/>}
   puts $mig_prj_file {      <Pin Bank="Select Bank" PADName="No connect" name="init_calib_complete"/>}
   puts $mig_prj_file {      <Pin Bank="Select Bank" PADName="No connect" name="tg_compare_error"/>}
   puts $mig_prj_file {    </System_Control>}
   puts $mig_prj_file {    <TimingParameters>}
   puts $mig_prj_file {      <Parameters tcke="5" tfaw="35" tras="34" trcd="13.91" trefi="7.8" trfc="260" trp="13.91" trrd="6" trtp="7.5" twtr="7.5"/>}
   puts $mig_prj_file {    </TimingParameters>}
   puts $mig_prj_file {    <mrBurstLength name="Burst Length">8 - Fixed</mrBurstLength>}
   puts $mig_prj_file {    <mrBurstType name="Read Burst Type and Length">Sequential</mrBurstType>}
   puts $mig_prj_file {    <mrCasLatency name="CAS Latency">11</mrCasLatency>}
   puts $mig_prj_file {    <mrMode name="Mode">Normal</mrMode>}
   puts $mig_prj_file {    <mrDllReset name="DLL Reset">No</mrDllReset>}
   puts $mig_prj_file {    <mrPdMode name="DLL control for precharge PD">Slow Exit</mrPdMode>}
   puts $mig_prj_file {    <emrDllEnable name="DLL Enable">Enable</emrDllEnable>}
   puts $mig_prj_file {    <emrOutputDriveStrength name="Output Driver Impedance Control">RZQ/7</emrOutputDriveStrength>}
   puts $mig_prj_file {    <emrMirrorSelection name="Address Mirroring">Disable</emrMirrorSelection>}
   puts $mig_prj_file {    <emrCSSelection name="Controller Chip Select Pin">Enable</emrCSSelection>}
   puts $mig_prj_file {    <emrRTT name="RTT (nominal) - On Die Termination (ODT)">RZQ/6</emrRTT>}
   puts $mig_prj_file {    <emrPosted name="Additive Latency (AL)">0</emrPosted>}
   puts $mig_prj_file {    <emrOCD name="Write Leveling Enable">Disabled</emrOCD>}
   puts $mig_prj_file {    <emrDQS name="TDQS enable">Enabled</emrDQS>}
   puts $mig_prj_file {    <emrRDQS name="Qoff">Output Buffer Enabled</emrRDQS>}
   puts $mig_prj_file {    <mr2PartialArraySelfRefresh name="Partial-Array Self Refresh">Full Array</mr2PartialArraySelfRefresh>}
   puts $mig_prj_file {    <mr2CasWriteLatency name="CAS write latency">8</mr2CasWriteLatency>}
   puts $mig_prj_file {    <mr2AutoSelfRefresh name="Auto Self Refresh">Enabled</mr2AutoSelfRefresh>}
   puts $mig_prj_file {    <mr2SelfRefreshTempRange name="High Temparature Self Refresh Rate">Normal</mr2SelfRefreshTempRange>}
   puts $mig_prj_file {    <mr2RTTWR name="RTT_WR - Dynamic On Die Termination (ODT)">Dynamic ODT off</mr2RTTWR>}
   puts $mig_prj_file {    <PortInterface>AXI</PortInterface>}
   puts $mig_prj_file {    <AXIParameters>}
   puts $mig_prj_file {      <C0_C_RD_WR_ARB_ALGORITHM>RD_PRI_REG</C0_C_RD_WR_ARB_ALGORITHM>}
   puts $mig_prj_file {      <C0_S_AXI_ADDR_WIDTH>30</C0_S_AXI_ADDR_WIDTH>}
   puts $mig_prj_file {      <C0_S_AXI_DATA_WIDTH>256</C0_S_AXI_DATA_WIDTH>}
   puts $mig_prj_file {      <C0_S_AXI_ID_WIDTH>4</C0_S_AXI_ID_WIDTH>}
   puts $mig_prj_file {      <C0_S_AXI_SUPPORTS_NARROW_BURST>1</C0_S_AXI_SUPPORTS_NARROW_BURST>}
   puts $mig_prj_file {    </AXIParameters>}
   puts $mig_prj_file {  </Controller>}
   puts $mig_prj_file {</Project>}

   close $mig_prj_file
}
# End of write_mig_file_main_mig_7series_0_1()



  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set ddr3_sdram [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 ddr3_sdram ]

  set memory_card_spi [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 memory_card_spi ]

  set ps2_clock_JA [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 ps2_clock_JA ]

  set ps2_clock_JB [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 ps2_clock_JB ]

  set ps2_clock_usb [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 ps2_clock_usb ]

  set ps2_data_JA [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 ps2_data_JA ]

  set ps2_data_JB [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 ps2_data_JB ]

  set ps2_data_usb [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 ps2_data_usb ]

  set sys_diff_clock [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 sys_diff_clock ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {100000000} \
   ] $sys_diff_clock

  set usb_uart [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:uart_rtl:1.0 usb_uart ]


  # Create ports
  set VGA_B_0 [ create_bd_port -dir O -from 4 -to 0 VGA_B_0 ]
  set VGA_G_0 [ create_bd_port -dir O -from 5 -to 0 VGA_G_0 ]
  set VGA_HS_0 [ create_bd_port -dir O VGA_HS_0 ]
  set VGA_R_0 [ create_bd_port -dir O -from 4 -to 0 VGA_R_0 ]
  set VGA_VS_0 [ create_bd_port -dir O VGA_VS_0 ]
  set fan_pwm [ create_bd_port -dir O -from 0 -to 0 fan_pwm ]
  set mode_m [ create_bd_port -dir O mode_m ]
  set mode_s [ create_bd_port -dir O mode_s ]
  set mode_u [ create_bd_port -dir O mode_u ]
  set reset [ create_bd_port -dir I -type rst reset ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $reset
  set waiting_for_interrupt [ create_bd_port -dir O -type intr waiting_for_interrupt ]

  # Create instance: CPU9444_0, and set properties
  set CPU9444_0 [ create_bd_cell -type ip -vlnv dkasza.com:CPU9444:CPU9444:see_git CPU9444_0 ]
  set_property -dict [ list \
   CONFIG.cache_line_log2_count {12} \
 ] $CPU9444_0

  # Create instance: SimpleVGA_0, and set properties
  set SimpleVGA_0 [ create_bd_cell -type ip -vlnv dkasza.com:CPU9444:SimpleVGA:see_git SimpleVGA_0 ]

  # Create instance: TrivialPLIC_0, and set properties
  set TrivialPLIC_0 [ create_bd_cell -type ip -vlnv dkasza.com:CPU9444:TrivialPLIC:see_git TrivialPLIC_0 ]

  # Create instance: TrivialPS2_0, and set properties
  set TrivialPS2_0 [ create_bd_cell -type ip -vlnv dkasza.org:CPU9444:TrivialPS2:see_git TrivialPS2_0 ]

  # Create instance: TrivialPS2_1, and set properties
  set TrivialPS2_1 [ create_bd_cell -type ip -vlnv dkasza.org:CPU9444:TrivialPS2:see_git TrivialPS2_1 ]

  # Create instance: TrivialPS2_2, and set properties
  set TrivialPS2_2 [ create_bd_cell -type ip -vlnv dkasza.org:CPU9444:TrivialPS2:see_git TrivialPS2_2 ]

  # Create instance: axi_bram_ctrl_0, and set properties
  set axi_bram_ctrl_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_bram_ctrl:4.1 axi_bram_ctrl_0 ]
  set_property -dict [ list \
   CONFIG.DATA_WIDTH {256} \
   CONFIG.ECC_TYPE {0} \
   CONFIG.READ_LATENCY {1} \
   CONFIG.SINGLE_PORT_BRAM {1} \
 ] $axi_bram_ctrl_0

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.ENABLE_ADVANCED_OPTIONS {1} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {2} \
   CONFIG.S00_HAS_DATA_FIFO {2} \
   CONFIG.S01_ARB_PRIORITY {15} \
   CONFIG.S01_HAS_DATA_FIFO {0} \
   CONFIG.STRATEGY {0} \
 ] $axi_interconnect_0

  # Create instance: axi_interconnect_1, and set properties
  set axi_interconnect_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_1 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {6} \
   CONFIG.STRATEGY {0} \
 ] $axi_interconnect_1

  # Create instance: axi_quad_spi_0, and set properties
  set axi_quad_spi_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0 ]
  set_property -dict [ list \
   CONFIG.C_FIFO_DEPTH {256} \
   CONFIG.C_SCK_RATIO {4} \
   CONFIG.C_TYPE_OF_AXI4_INTERFACE {0} \
   CONFIG.C_USE_STARTUP {0} \
   CONFIG.C_USE_STARTUP_INT {0} \
   CONFIG.QSPI_BOARD_INTERFACE {Custom} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $axi_quad_spi_0

  # Create instance: axi_uartlite_0, and set properties
  set axi_uartlite_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_uartlite:2.0 axi_uartlite_0 ]
  set_property -dict [ list \
   CONFIG.C_BAUDRATE {115200} \
   CONFIG.UARTLITE_BOARD_INTERFACE {usb_uart} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $axi_uartlite_0

  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [ list \
   CONFIG.Algorithm {Minimum_Area} \
   CONFIG.Byte_Size {8} \
   CONFIG.Coe_File {../../../../../../../../../firmware/xilinx-fpga/firmware.coe} \
   CONFIG.EN_SAFETY_CKT {true} \
   CONFIG.Enable_32bit_Address {false} \
   CONFIG.Fill_Remaining_Memory_Locations {false} \
   CONFIG.Load_Init_File {true} \
   CONFIG.Operating_Mode_A {WRITE_FIRST} \
   CONFIG.Read_Width_A {256} \
   CONFIG.Read_Width_B {256} \
   CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
   CONFIG.Use_Byte_Write_Enable {true} \
   CONFIG.Use_RSTA_Pin {true} \
   CONFIG.Write_Depth_A {1024} \
   CONFIG.Write_Width_A {256} \
   CONFIG.Write_Width_B {256} \
   CONFIG.use_bram_block {Stand_Alone} \
 ] $blk_mem_gen_0

  # Create instance: mig_7series_0, and set properties
  set mig_7series_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mig_7series:4.2 mig_7series_0 ]

  # Generate the PRJ File for MIG
  set str_mig_folder [get_property IP_DIR [ get_ips [ get_property CONFIG.Component_Name $mig_7series_0 ] ] ]
  set str_mig_file_name mig_b.prj
  set str_mig_file_path ${str_mig_folder}/${str_mig_file_name}

  write_mig_file_main_mig_7series_0_1 $str_mig_file_path

  set_property -dict [ list \
   CONFIG.BOARD_MIG_PARAM {ddr3_sdram} \
   CONFIG.RESET_BOARD_INTERFACE {reset} \
   CONFIG.XML_INPUT_FILE {mig_b.prj} \
 ] $mig_7series_0

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $xlconstant_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {5} \
   CONFIG.DIN_WIDTH {15} \
   CONFIG.DOUT_WIDTH {10} \
 ] $xlslice_0

  # Create interface connections
  connect_bd_intf_net -intf_net CPU9444_0_memory_bus [get_bd_intf_pins CPU9444_0/memory_bus] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net CPU9444_0_peripheral_bus [get_bd_intf_pins CPU9444_0/peripheral_bus] [get_bd_intf_pins axi_interconnect_1/S00_AXI]
  connect_bd_intf_net -intf_net SimpleVGA_0_interface_aximm [get_bd_intf_pins SimpleVGA_0/interface_aximm] [get_bd_intf_pins axi_interconnect_0/S01_AXI]
  connect_bd_intf_net -intf_net TrivialPS2_0_ps2_clock [get_bd_intf_ports ps2_clock_JA] [get_bd_intf_pins TrivialPS2_0/ps2_clock]
  connect_bd_intf_net -intf_net TrivialPS2_0_ps2_data [get_bd_intf_ports ps2_data_JA] [get_bd_intf_pins TrivialPS2_0/ps2_data]
  connect_bd_intf_net -intf_net TrivialPS2_1_ps2_clock [get_bd_intf_ports ps2_clock_JB] [get_bd_intf_pins TrivialPS2_1/ps2_clock]
  connect_bd_intf_net -intf_net TrivialPS2_1_ps2_data [get_bd_intf_ports ps2_data_JB] [get_bd_intf_pins TrivialPS2_1/ps2_data]
  connect_bd_intf_net -intf_net TrivialPS2_2_ps2_clock [get_bd_intf_ports ps2_clock_usb] [get_bd_intf_pins TrivialPS2_2/ps2_clock]
  connect_bd_intf_net -intf_net TrivialPS2_2_ps2_data [get_bd_intf_ports ps2_data_usb] [get_bd_intf_pins TrivialPS2_2/ps2_data]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins mig_7series_0/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_bram_ctrl_0/S_AXI] [get_bd_intf_pins axi_interconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_1_M00_AXI [get_bd_intf_pins axi_interconnect_1/M00_AXI] [get_bd_intf_pins axi_uartlite_0/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_1_M01_AXI [get_bd_intf_pins TrivialPLIC_0/interface_aximm] [get_bd_intf_pins axi_interconnect_1/M01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_1_M02_AXI [get_bd_intf_pins axi_interconnect_1/M02_AXI] [get_bd_intf_pins axi_quad_spi_0/AXI_LITE]
  connect_bd_intf_net -intf_net axi_interconnect_1_M03_AXI [get_bd_intf_pins TrivialPS2_0/interface_aximm] [get_bd_intf_pins axi_interconnect_1/M03_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_1_M04_AXI [get_bd_intf_pins TrivialPS2_1/interface_aximm] [get_bd_intf_pins axi_interconnect_1/M04_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_1_M05_AXI [get_bd_intf_pins TrivialPS2_2/interface_aximm] [get_bd_intf_pins axi_interconnect_1/M05_AXI]
  connect_bd_intf_net -intf_net axi_quad_spi_0_SPI_0 [get_bd_intf_ports memory_card_spi] [get_bd_intf_pins axi_quad_spi_0/SPI_0]
  connect_bd_intf_net -intf_net axi_uartlite_0_UART [get_bd_intf_ports usb_uart] [get_bd_intf_pins axi_uartlite_0/UART]
  connect_bd_intf_net -intf_net mig_7series_0_DDR3 [get_bd_intf_ports ddr3_sdram] [get_bd_intf_pins mig_7series_0/DDR3]
  connect_bd_intf_net -intf_net sys_diff_clock_1 [get_bd_intf_ports sys_diff_clock] [get_bd_intf_pins mig_7series_0/SYS_CLK]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins SimpleVGA_0/ACLK] [get_bd_pins axi_bram_ctrl_0/s_axi_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/S01_ACLK] [get_bd_pins mig_7series_0/ui_clk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk]
  connect_bd_net -net CPU9444_0_mode_m [get_bd_ports mode_m] [get_bd_pins CPU9444_0/mode_m]
  connect_bd_net -net CPU9444_0_mode_s [get_bd_ports mode_s] [get_bd_pins CPU9444_0/mode_s]
  connect_bd_net -net CPU9444_0_mode_u [get_bd_ports mode_u] [get_bd_pins CPU9444_0/mode_u]
  connect_bd_net -net CPU9444_0_waiting_for_interrupt [get_bd_ports waiting_for_interrupt] [get_bd_pins CPU9444_0/waiting_for_interrupt]
  connect_bd_net -net Net [get_bd_pins CPU9444_0/ARESETn] [get_bd_pins TrivialPLIC_0/ARESETn] [get_bd_pins TrivialPS2_0/ARESETn] [get_bd_pins TrivialPS2_1/ARESETn] [get_bd_pins TrivialPS2_2/ARESETn] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_interconnect_1/ARESETN] [get_bd_pins axi_interconnect_1/M00_ARESETN] [get_bd_pins axi_interconnect_1/M01_ARESETN] [get_bd_pins axi_interconnect_1/M02_ARESETN] [get_bd_pins axi_interconnect_1/M03_ARESETN] [get_bd_pins axi_interconnect_1/M04_ARESETN] [get_bd_pins axi_interconnect_1/M05_ARESETN] [get_bd_pins axi_interconnect_1/S00_ARESETN] [get_bd_pins axi_quad_spi_0/s_axi_aresetn] [get_bd_pins axi_uartlite_0/s_axi_aresetn] [get_bd_pins proc_sys_reset_1/peripheral_aresetn]
  connect_bd_net -net Net1 [get_bd_pins CPU9444_0/ACLK] [get_bd_pins TrivialPLIC_0/ACLK] [get_bd_pins TrivialPS2_0/ACLK] [get_bd_pins TrivialPS2_1/ACLK] [get_bd_pins TrivialPS2_2/ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_interconnect_1/ACLK] [get_bd_pins axi_interconnect_1/M00_ACLK] [get_bd_pins axi_interconnect_1/M01_ACLK] [get_bd_pins axi_interconnect_1/M02_ACLK] [get_bd_pins axi_interconnect_1/M03_ACLK] [get_bd_pins axi_interconnect_1/M04_ACLK] [get_bd_pins axi_interconnect_1/M05_ACLK] [get_bd_pins axi_interconnect_1/S00_ACLK] [get_bd_pins axi_quad_spi_0/ext_spi_clk] [get_bd_pins axi_quad_spi_0/s_axi_aclk] [get_bd_pins axi_uartlite_0/s_axi_aclk] [get_bd_pins mig_7series_0/ui_addn_clk_0] [get_bd_pins proc_sys_reset_1/slowest_sync_clk]
  connect_bd_net -net Net2 [get_bd_pins SimpleVGA_0/ARESETn] [get_bd_pins axi_bram_ctrl_0/s_axi_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/S01_ARESETN] [get_bd_pins mig_7series_0/aresetn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn]
  connect_bd_net -net SimpleVGA_0_VGA_B [get_bd_ports VGA_B_0] [get_bd_pins SimpleVGA_0/VGA_B]
  connect_bd_net -net SimpleVGA_0_VGA_G [get_bd_ports VGA_G_0] [get_bd_pins SimpleVGA_0/VGA_G]
  connect_bd_net -net SimpleVGA_0_VGA_HS [get_bd_ports VGA_HS_0] [get_bd_pins SimpleVGA_0/VGA_HS]
  connect_bd_net -net SimpleVGA_0_VGA_R [get_bd_ports VGA_R_0] [get_bd_pins SimpleVGA_0/VGA_R]
  connect_bd_net -net SimpleVGA_0_VGA_VS [get_bd_ports VGA_VS_0] [get_bd_pins SimpleVGA_0/VGA_VS]
  connect_bd_net -net TrivialPLIC_0_s_interrupt [get_bd_pins CPU9444_0/s_interrupt] [get_bd_pins TrivialPLIC_0/s_interrupt]
  connect_bd_net -net TrivialPS2_0_interrupt_out [get_bd_pins TrivialPLIC_0/irq3] [get_bd_pins TrivialPS2_0/interrupt_out]
  connect_bd_net -net TrivialPS2_1_interrupt_out [get_bd_pins TrivialPLIC_0/irq4] [get_bd_pins TrivialPS2_1/interrupt_out]
  connect_bd_net -net TrivialPS2_2_interrupt_out [get_bd_pins TrivialPLIC_0/irq5] [get_bd_pins TrivialPS2_2/interrupt_out]
  connect_bd_net -net axi_bram_ctrl_0_bram_addr_a [get_bd_pins axi_bram_ctrl_0/bram_addr_a] [get_bd_pins xlslice_0/Din]
  connect_bd_net -net axi_bram_ctrl_0_bram_clk_a [get_bd_pins axi_bram_ctrl_0/bram_clk_a] [get_bd_pins blk_mem_gen_0/clka]
  connect_bd_net -net axi_bram_ctrl_0_bram_en_a [get_bd_pins axi_bram_ctrl_0/bram_en_a] [get_bd_pins blk_mem_gen_0/ena]
  connect_bd_net -net axi_bram_ctrl_0_bram_rst_a [get_bd_pins axi_bram_ctrl_0/bram_rst_a] [get_bd_pins blk_mem_gen_0/rsta]
  connect_bd_net -net axi_bram_ctrl_0_bram_we_a [get_bd_pins axi_bram_ctrl_0/bram_we_a] [get_bd_pins blk_mem_gen_0/wea]
  connect_bd_net -net axi_bram_ctrl_0_bram_wrdata_a [get_bd_pins axi_bram_ctrl_0/bram_wrdata_a] [get_bd_pins blk_mem_gen_0/dina]
  connect_bd_net -net axi_quad_spi_0_ip2intc_irpt [get_bd_pins TrivialPLIC_0/irq2] [get_bd_pins axi_quad_spi_0/ip2intc_irpt]
  connect_bd_net -net axi_uartlite_0_interrupt [get_bd_pins TrivialPLIC_0/irq1] [get_bd_pins axi_uartlite_0/interrupt]
  connect_bd_net -net blk_mem_gen_0_douta [get_bd_pins axi_bram_ctrl_0/bram_rddata_a] [get_bd_pins blk_mem_gen_0/douta]
  connect_bd_net -net reset_2 [get_bd_ports reset] [get_bd_pins mig_7series_0/sys_rst] [get_bd_pins proc_sys_reset_0/ext_reset_in] [get_bd_pins proc_sys_reset_1/ext_reset_in]
  connect_bd_net -net xlconstant_0_dout [get_bd_ports fan_pwm] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins blk_mem_gen_0/addra] [get_bd_pins xlslice_0/Dout]

  # Create address segments
  assign_bd_address -offset 0x00020000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU9444_0/peripheral_bus] [get_bd_addr_segs TrivialPLIC_0/interface_aximm/reg0] -force
  assign_bd_address -offset 0x00030000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU9444_0/peripheral_bus] [get_bd_addr_segs TrivialPS2_0/interface_aximm/reg0] -force
  assign_bd_address -offset 0x00040000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU9444_0/peripheral_bus] [get_bd_addr_segs TrivialPS2_1/interface_aximm/reg0] -force
  assign_bd_address -offset 0x00050000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU9444_0/peripheral_bus] [get_bd_addr_segs TrivialPS2_2/interface_aximm/reg0] -force
  assign_bd_address -offset 0x00000000 -range 0x00008000 -target_address_space [get_bd_addr_spaces CPU9444_0/memory_bus] [get_bd_addr_segs axi_bram_ctrl_0/S_AXI/Mem0] -force
  assign_bd_address -offset 0x00010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU9444_0/peripheral_bus] [get_bd_addr_segs axi_quad_spi_0/AXI_LITE/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CPU9444_0/peripheral_bus] [get_bd_addr_segs axi_uartlite_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x80000000 -range 0x40000000 -target_address_space [get_bd_addr_spaces CPU9444_0/memory_bus] [get_bd_addr_segs mig_7series_0/memmap/memaddr] -force
  assign_bd_address -offset 0x80000000 -range 0x40000000 -target_address_space [get_bd_addr_spaces SimpleVGA_0/interface_aximm] [get_bd_addr_segs mig_7series_0/memmap/memaddr] -force

  # Exclude Address Segments
  exclude_bd_addr_seg -offset 0x00000000 -range 0x00008000 -target_address_space [get_bd_addr_spaces SimpleVGA_0/interface_aximm] [get_bd_addr_segs axi_bram_ctrl_0/S_AXI/Mem0]

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Reduced Jogs",
   "Color Coded_ScaleFactor":"0.674476",
   "Color Coded_TopLeft":"-1744,0",
   "Default View_ScaleFactor":"0.722879",
   "Default View_TopLeft":"-1411,221",
   "Display-PortTypeClock":"true",
   "Display-PortTypeInterrupt":"true",
   "Display-PortTypeOthers":"true",
   "Display-PortTypeReset":"true",
   "ExpandedHierarchyInLayout":"",
   "Grouping and No Loops_ScaleFactor":"0.598897",
   "Grouping and No Loops_TopLeft":"-1715,0",
   "Interfaces View_Layers":"/Net:false|/reset_2:false|/phy_rx_clk_0_1:false|/Net2:false|/axi_quad_spi_0_ip2intc_irpt:false|/Net1:false|/CPU9444_0_waiting_for_interrupt:false|/TrivialPLIC_0_s_interrupt:false|/ACLK_1:false|/axi_bram_ctrl_0_bram_clk_a:false|/axi_uartlite_0_interrupt:false|/axi_ethernetlite_0_ip2intc_irpt:false|/axi_bram_ctrl_0_bram_rst_a:false|",
   "Interfaces View_ScaleFactor":"1.0",
   "Interfaces View_TopLeft":"-1145,-229",
   "No Loops_ScaleFactor":"0.603333",
   "No Loops_TopLeft":"-1666,0",
   "PinnedBlocks":"",
   "Reduced Jogs_ExpandedHierarchyInLayout":"",
   "Reduced Jogs_Layers":"/Net:true|/reset_2:true|/phy_rx_clk_0_1:true|/Net2:true|/axi_quad_spi_0_ip2intc_irpt:true|/Net1:true|/CPU9444_0_waiting_for_interrupt:true|/TrivialPLIC_0_s_interrupt:true|/ACLK_1:true|/axi_bram_ctrl_0_bram_clk_a:true|/axi_uartlite_0_interrupt:true|/axi_ethernetlite_0_ip2intc_irpt:true|/axi_bram_ctrl_0_bram_rst_a:true|",
   "Reduced Jogs_Layout":"# # String gsaved with Nlview 7.0.21  2019-05-29 bk=1.5064 VDI=41 GEI=36 GUI=JA:9.0 TLS
#  -string -flagsOSRD
preplace port ddr3_sdram -pg 1 -lvl 6 -x 2120 -y 540 -defaultsOSRD
preplace port sys_diff_clock -pg 1 -lvl 0 -x 0 -y 540 -defaultsOSRD
preplace port usb_uart -pg 1 -lvl 6 -x 2120 -y 2000 -defaultsOSRD
preplace port memory_card_spi -pg 1 -lvl 6 -x 2120 -y 820 -defaultsOSRD
preplace port ps2_data_JA -pg 1 -lvl 6 -x 2120 -y 1780 -defaultsOSRD
preplace port ps2_clock_JA -pg 1 -lvl 6 -x 2120 -y 1800 -defaultsOSRD
preplace port ps2_data_JB -pg 1 -lvl 6 -x 2120 -y 2160 -defaultsOSRD
preplace port ps2_clock_JB -pg 1 -lvl 6 -x 2120 -y 2180 -defaultsOSRD
preplace port ps2_data_usb -pg 1 -lvl 6 -x 2120 -y 2320 -defaultsOSRD
preplace port ps2_clock_usb -pg 1 -lvl 6 -x 2120 -y 2340 -defaultsOSRD
preplace port mode_m -pg 1 -lvl 6 -x 2120 -y 2580 -defaultsOSRD
preplace port mode_s -pg 1 -lvl 6 -x 2120 -y 2600 -defaultsOSRD
preplace port mode_u -pg 1 -lvl 6 -x 2120 -y 2620 -defaultsOSRD
preplace port waiting_for_interrupt -pg 1 -lvl 6 -x 2120 -y 2640 -defaultsOSRD
preplace port VGA_HS_0 -pg 1 -lvl 6 -x 2120 -y 80 -defaultsOSRD
preplace port VGA_VS_0 -pg 1 -lvl 6 -x 2120 -y 100 -defaultsOSRD
preplace port reset -pg 1 -lvl 0 -x 0 -y 560 -defaultsOSRD
preplace portBus fan_pwm -pg 1 -lvl 6 -x 2120 -y 2520 -defaultsOSRD
preplace portBus VGA_R_0 -pg 1 -lvl 6 -x 2120 -y 120 -defaultsOSRD
preplace portBus VGA_G_0 -pg 1 -lvl 6 -x 2120 -y 140 -defaultsOSRD
preplace portBus VGA_B_0 -pg 1 -lvl 6 -x 2120 -y 160 -defaultsOSRD
preplace inst axi_interconnect_0 -pg 1 -lvl 2 -x 690 -y 620 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 66 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 28 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 118 122 120 115 121 116 123 117 119} -defaultsOSRD -pinY S00_AXI 0L -pinY M00_AXI 20R -pinY M01_AXI 0R -pinY S01_AXI 20L -pinY ACLK 40L -pinY ARESETN 120L -pinY S00_ACLK 200L -pinY S00_ARESETN 160L -pinY M00_ACLK 60L -pinY M00_ARESETN 180L -pinY M01_ACLK 80L -pinY M01_ARESETN 220L -pinY S01_ACLK 100L -pinY S01_ARESETN 140L
preplace inst blk_mem_gen_0 -pg 1 -lvl 5 -x 1890 -y 240 -defaultsOSRD -pinY BRAM_PORTA 0L -pinY BRAM_PORTA.addra 20L -pinY BRAM_PORTA.clka 80L -pinY BRAM_PORTA.dina 100L -pinY BRAM_PORTA.douta 120L -pinY BRAM_PORTA.ena 140L -pinY BRAM_PORTA.rsta 160L -pinY BRAM_PORTA.wea 180L -pinY rsta_busy 0R
preplace inst axi_bram_ctrl_0 -pg 1 -lvl 3 -x 1250 -y 220 -defaultsOSRD -pinY S_AXI 100L -pinY BRAM_PORTA 0R -pinY BRAM_PORTA.bram_addr_a 20R -pinY BRAM_PORTA.bram_clk_a 40R -pinY BRAM_PORTA.bram_wrdata_a 60R -pinY BRAM_PORTA.bram_rddata_a 80R -pinY BRAM_PORTA.bram_en_a 100R -pinY BRAM_PORTA.bram_rst_a 120R -pinY BRAM_PORTA.bram_we_a 140R -pinY s_axi_aclk 120L -pinY s_axi_aresetn 140L
preplace inst proc_sys_reset_0 -pg 1 -lvl 1 -x 220 -y 400 -swap {0 4 1 3 2 5 6 7 8 9} -defaultsOSRD -pinY slowest_sync_clk 0L -pinY ext_reset_in 80L -pinY aux_reset_in 20L -pinY mb_debug_sys_rst 60L -pinY dcm_locked 40L -pinY mb_reset 0R -pinBusY bus_struct_reset 20R -pinBusY peripheral_reset 40R -pinBusY interconnect_aresetn 60R -pinBusY peripheral_aresetn 80R
preplace inst proc_sys_reset_1 -pg 1 -lvl 1 -x 220 -y 760 -defaultsOSRD -pinY slowest_sync_clk 0L -pinY ext_reset_in 20L -pinY aux_reset_in 40L -pinY mb_debug_sys_rst 60L -pinY dcm_locked 80L -pinY mb_reset 0R -pinBusY bus_struct_reset 20R -pinBusY peripheral_reset 40R -pinBusY interconnect_aresetn 60R -pinBusY peripheral_aresetn 80R
preplace inst xlslice_0 -pg 1 -lvl 4 -x 1630 -y 260 -defaultsOSRD -pinBusY Din 0L -pinBusY Dout 0R
preplace inst axi_interconnect_1 -pg 1 -lvl 2 -x 690 -y 960 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 74 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 18 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 56 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 142 135 143 136 144 137 145 138 149 139 146 140 147 141 148} -defaultsOSRD -pinY S00_AXI 1080L -pinY M00_AXI 1040R -pinY M01_AXI 20R -pinY M02_AXI 0R -pinY M03_AXI 840R -pinY M04_AXI 1220R -pinY M05_AXI 1380R -pinY ACLK 1100L -pinY ARESETN 1260L -pinY S00_ACLK 1120L -pinY S00_ARESETN 1280L -pinY M00_ACLK 1140L -pinY M00_ARESETN 1300L -pinY M01_ACLK 1160L -pinY M01_ARESETN 1320L -pinY M02_ACLK 1180L -pinY M02_ARESETN 1400L -pinY M03_ACLK 1200L -pinY M03_ARESETN 1340L -pinY M04_ACLK 1220L -pinY M04_ARESETN 1360L -pinY M05_ACLK 1240L -pinY M05_ARESETN 1380L
preplace inst axi_uartlite_0 -pg 1 -lvl 3 -x 1250 -y 2000 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 21 23} -defaultsOSRD -pinY S_AXI 0L -pinY UART 0R -pinY s_axi_aclk 40L -pinY s_axi_aresetn 20L -pinY interrupt 20R
preplace inst axi_quad_spi_0 -pg 1 -lvl 3 -x 1250 -y 820 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 31 34} -defaultsOSRD -pinY SPI_0 0R -pinY AXI_LITE 0L -pinY ext_spi_clk 40L -pinY s_axi_aclk 60L -pinY s_axi_aresetn 20L -pinY ip2intc_irpt 20R
preplace inst xlconstant_0 -pg 1 -lvl 5 -x 1890 -y 2520 -defaultsOSRD -pinBusY dout 0R
preplace inst CPU9444_0 -pg 1 -lvl 3 -x 1250 -y 2520 -swap {28 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 0 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 53 52} -defaultsOSRD -pinY memory_bus 20R -pinY peripheral_bus 0R -pinBusY current_mode 40R -pinY mode_m 60R -pinY mode_s 80R -pinY mode_u 100R -pinY waiting_for_interrupt 120R -pinY s_interrupt 0L -pinY ACLK 40L -pinY ARESETn 20L
preplace inst TrivialPLIC_0 -pg 1 -lvl 3 -x 1250 -y 980 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 50 20 53 54 51 23 24 25 49 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 52 22 21} -defaultsOSRD -pinY interface_aximm 0L -pinY irq1 620L -pinY irq2 20L -pinY irq3 660L -pinY irq4 680L -pinY irq5 640L -pinY irq6 80L -pinY irq7 100L -pinY irq8 120L -pinY irq9 600L -pinY irq10 140L -pinY irq11 160L -pinY irq12 180L -pinY irq13 200L -pinY irq14 220L -pinY irq15 240L -pinY irq16 260L -pinY irq17 280L -pinY irq18 300L -pinY irq19 320L -pinY irq20 340L -pinY irq21 360L -pinY irq22 380L -pinY irq23 400L -pinY irq24 420L -pinY irq25 440L -pinY irq26 460L -pinY irq27 480L -pinY irq28 500L -pinY irq29 520L -pinY irq30 540L -pinY irq31 560L -pinY irq32 580L -pinY s_interrupt 680R -pinY ACLK 60L -pinY ARESETn 40L
preplace inst SimpleVGA_0 -pg 1 -lvl 3 -x 1250 -y 0 -defaultsOSRD -pinY interface_aximm 0R -pinY VGA_HS 20R -pinY VGA_VS 40R -pinBusY VGA_R 60R -pinBusY VGA_G 80R -pinBusY VGA_B 100R -pinY ACLK 80L -pinY ARESETn 100L
preplace inst TrivialPS2_0 -pg 1 -lvl 3 -x 1250 -y 1780 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 29 28 31 30} -defaultsOSRD -pinY interface_aximm 20L -pinY ps2_data 0R -pinY ps2_clock 20R -pinBusY debug_state 60R -pinY interrupt_out 40R -pinY ACLK 60L -pinY ARESETn 40L
preplace inst TrivialPS2_1 -pg 1 -lvl 3 -x 1250 -y 2160 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 29 28 31 30} -defaultsOSRD -pinY interface_aximm 20L -pinY ps2_data 0R -pinY ps2_clock 20R -pinBusY debug_state 60R -pinY interrupt_out 40R -pinY ACLK 60L -pinY ARESETn 40L
preplace inst mig_7series_0 -pg 1 -lvl 3 -x 1250 -y 480 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 54 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 16 55 56 63 59 58 62 60 61 57} -defaultsOSRD -pinY DDR3 0R -pinY S_AXI 100L -pinY SYS_CLK 0L -pinY sys_rst 140L -pinY ui_clk_sync_rst 40R -pinY ui_clk 20R -pinY ui_addn_clk_0 140R -pinY mmcm_locked 60R -pinY init_calib_complete 80R -pinY aresetn 120L
preplace inst TrivialPS2_2 -pg 1 -lvl 3 -x 1250 -y 2320 -swap {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 29 28 31 30} -defaultsOSRD -pinY interface_aximm 20L -pinY ps2_data 0R -pinY ps2_clock 20R -pinBusY debug_state 60R -pinY interrupt_out 40R -pinY ACLK 60L -pinY ARESETn 40L
preplace netloc Net 1 1 2 400 500 940
preplace netloc Net1 1 0 4 40 700 440 520 880 680 1420
preplace netloc ACLK_1 1 0 4 20 340 480 340 860 160 1420
preplace netloc Net2 1 1 2 420 460 1000
preplace netloc axi_bram_ctrl_0_bram_clk_a 1 3 2 1500 200 1740J
preplace netloc axi_bram_ctrl_0_bram_we_a 1 3 2 1460 420 NJ
preplace netloc axi_bram_ctrl_0_bram_en_a 1 3 2 1500 380 NJ
preplace netloc axi_bram_ctrl_0_bram_rst_a 1 3 2 1480 400 NJ
preplace netloc blk_mem_gen_0_douta 1 3 2 1520 360 NJ
preplace netloc axi_bram_ctrl_0_bram_wrdata_a 1 3 2 1460 180 1760J
preplace netloc axi_bram_ctrl_0_bram_addr_a 1 3 1 1520 240n
preplace netloc xlslice_0_Dout 1 4 1 NJ 260
preplace netloc xlconstant_0_dout 1 5 1 NJ 2520
preplace netloc CPU9444_0_mode_m 1 3 3 NJ 2580 NJ 2580 NJ
preplace netloc CPU9444_0_mode_s 1 3 3 NJ 2600 NJ 2600 NJ
preplace netloc CPU9444_0_mode_u 1 3 3 NJ 2620 NJ 2620 NJ
preplace netloc CPU9444_0_waiting_for_interrupt 1 3 3 NJ 2640 NJ 2640 NJ
preplace netloc axi_quad_spi_0_ip2intc_irpt 1 2 2 1080 740 1420
preplace netloc axi_uartlite_0_interrupt 1 2 2 1020 1940 1420
preplace netloc TrivialPLIC_0_s_interrupt 1 2 2 1000 720 1440
preplace netloc SimpleVGA_0_VGA_HS 1 3 3 NJ 20 NJ 20 2100J
preplace netloc SimpleVGA_0_VGA_VS 1 3 3 1520J 120 NJ 120 2060J
preplace netloc SimpleVGA_0_VGA_R 1 3 3 NJ 60 NJ 60 2080J
preplace netloc SimpleVGA_0_VGA_G 1 3 3 NJ 80 NJ 80 2040J
preplace netloc SimpleVGA_0_VGA_B 1 3 3 NJ 100 NJ 100 2020J
preplace netloc TrivialPS2_0_interrupt_out 1 2 2 1060 1720 1420
preplace netloc TrivialPS2_1_interrupt_out 1 2 2 1080 1900 1480
preplace netloc reset_2 1 0 3 20 560 500J 540 920J
preplace netloc TrivialPS2_2_interrupt_out 1 2 2 1040 1920 1440
preplace netloc axi_interconnect_0_M00_AXI 1 2 1 900 580n
preplace netloc sys_diff_clock_1 1 0 3 NJ 540 460J 480 NJ
preplace netloc CPU9444_0_peripheral_bus 1 1 3 540 900 960J 760 1500
preplace netloc axi_interconnect_0_M01_AXI 1 2 1 840 320n
preplace netloc TrivialPS2_1_ps2_data 1 3 3 NJ 2160 NJ 2160 NJ
preplace netloc axi_quad_spi_0_SPI_0 1 3 3 NJ 820 NJ 820 NJ
preplace netloc axi_interconnect_1_M02_AXI 1 2 1 980 820n
preplace netloc mig_7series_0_DDR3 1 3 3 1480J 520 NJ 520 2060J
preplace netloc axi_interconnect_1_M03_AXI 1 2 1 N 1800
preplace netloc axi_interconnect_1_M01_AXI 1 2 1 N 980
preplace netloc TrivialPS2_0_ps2_clock 1 3 3 NJ 1800 NJ 1800 NJ
preplace netloc TrivialPS2_1_ps2_clock 1 3 3 NJ 2180 NJ 2180 NJ
preplace netloc SimpleVGA_0_interface_aximm 1 1 3 520 420 NJ 420 1440
preplace netloc axi_interconnect_1_M00_AXI 1 2 1 N 2000
preplace netloc axi_interconnect_1_M04_AXI 1 2 1 N 2180
preplace netloc TrivialPS2_0_ps2_data 1 3 3 NJ 1780 NJ 1780 NJ
preplace netloc axi_uartlite_0_UART 1 3 3 NJ 2000 NJ 2000 NJ
preplace netloc CPU9444_0_memory_bus 1 1 3 540 560 860J 700 1520
preplace netloc axi_interconnect_1_M05_AXI 1 2 1 N 2340
preplace netloc TrivialPS2_2_ps2_clock 1 3 3 NJ 2340 NJ 2340 NJ
preplace netloc TrivialPS2_2_ps2_data 1 3 3 NJ 2320 NJ 2320 NJ
levelinfo -pg 1 0 220 690 1250 1630 1890 2120
pagesize -pg 1 -db -bbox -sgen -150 -60 2320 2700
",
   "Reduced Jogs_ScaleFactor":"0.603333",
   "Reduced Jogs_TopLeft":"-1654,0",
   "commentid":"",
   "guistr":"# # String gsaved with Nlview 7.0.21  2019-05-29 bk=1.5064 VDI=41 GEI=36 GUI=JA:9.0 TLS
#  -string -flagsOSRD
preplace port ddr3_sdram -pg 1 -lvl 6 -x 1790 -y 770 -defaultsOSRD
preplace port sys_diff_clock -pg 1 -lvl 0 -x 0 -y 820 -defaultsOSRD
preplace port usb_uart -pg 1 -lvl 6 -x 1790 -y 2290 -defaultsOSRD
preplace port memory_card_spi -pg 1 -lvl 6 -x 1790 -y 2100 -defaultsOSRD
preplace port ps2_data_JA -pg 1 -lvl 6 -x 1790 -y 2420 -defaultsOSRD
preplace port ps2_clock_JA -pg 1 -lvl 6 -x 1790 -y 2440 -defaultsOSRD
preplace port ps2_data_JB -pg 1 -lvl 6 -x 1790 -y 2580 -defaultsOSRD
preplace port ps2_clock_JB -pg 1 -lvl 6 -x 1790 -y 2600 -defaultsOSRD
preplace port eth_mdio_mdc -pg 1 -lvl 6 -x 1790 -y 2990 -defaultsOSRD
preplace port mode_m -pg 1 -lvl 6 -x 1790 -y 1070 -defaultsOSRD
preplace port mode_s -pg 1 -lvl 6 -x 1790 -y 1090 -defaultsOSRD
preplace port mode_u -pg 1 -lvl 6 -x 1790 -y 1110 -defaultsOSRD
preplace port waiting_for_interrupt -pg 1 -lvl 6 -x 1790 -y 1130 -defaultsOSRD
preplace port VGA_HS_0 -pg 1 -lvl 6 -x 1790 -y 330 -defaultsOSRD
preplace port VGA_VS_0 -pg 1 -lvl 6 -x 1790 -y 350 -defaultsOSRD
preplace port phy_tx_en -pg 1 -lvl 6 -x 1790 -y 2950 -defaultsOSRD
preplace port phy_rx_clk -pg 1 -lvl 0 -x 0 -y 2700 -defaultsOSRD
preplace port phy_dv -pg 1 -lvl 0 -x 0 -y 2720 -defaultsOSRD
preplace port reset -pg 1 -lvl 0 -x 0 -y 840 -defaultsOSRD
preplace port phy_tx_clk -pg 1 -lvl 0 -x 0 -y 3050 -defaultsOSRD
preplace portBus fan_pwm -pg 1 -lvl 6 -x 1790 -y 2660 -defaultsOSRD
preplace portBus VGA_R_0 -pg 1 -lvl 6 -x 1790 -y 370 -defaultsOSRD
preplace portBus VGA_G_0 -pg 1 -lvl 6 -x 1790 -y 390 -defaultsOSRD
preplace portBus VGA_B_0 -pg 1 -lvl 6 -x 1790 -y 410 -defaultsOSRD
preplace portBus phy_tx_data -pg 1 -lvl 6 -x 1790 -y 2970 -defaultsOSRD
preplace portBus phy_rx_data -pg 1 -lvl 0 -x 0 -y 3070 -defaultsOSRD
preplace inst axi_interconnect_0 -pg 1 -lvl 2 -x 600 -y 640 -defaultsOSRD
preplace inst blk_mem_gen_0 -pg 1 -lvl 5 -x 1640 -y 140 -defaultsOSRD
preplace inst axi_bram_ctrl_0 -pg 1 -lvl 3 -x 1030 -y 140 -defaultsOSRD
preplace inst proc_sys_reset_0 -pg 1 -lvl 1 -x 210 -y 510 -defaultsOSRD
preplace inst proc_sys_reset_1 -pg 1 -lvl 1 -x 210 -y 720 -defaultsOSRD
preplace inst xlslice_0 -pg 1 -lvl 4 -x 1400 -y 60 -defaultsOSRD
preplace inst axi_interconnect_1 -pg 1 -lvl 2 -x 600 -y 2340 -defaultsOSRD
preplace inst axi_uartlite_0 -pg 1 -lvl 3 -x 1030 -y 2300 -defaultsOSRD
preplace inst axi_quad_spi_0 -pg 1 -lvl 3 -x 1030 -y 2110 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 5 -x 1640 -y 2660 -defaultsOSRD
preplace inst CPU9444_0 -pg 1 -lvl 3 -x 1030 -y 1070 -defaultsOSRD
preplace inst TrivialPLIC_0 -pg 1 -lvl 3 -x 1030 -y 1610 -defaultsOSRD
preplace inst SimpleVGA_0 -pg 1 -lvl 3 -x 1030 -y 360 -defaultsOSRD
preplace inst TrivialPS2_0 -pg 1 -lvl 3 -x 1030 -y 2450 -defaultsOSRD
preplace inst TrivialPS2_1 -pg 1 -lvl 3 -x 1030 -y 2610 -defaultsOSRD
preplace inst axi_ethernetlite_0 -pg 1 -lvl 3 -x 1030 -y 2890 -defaultsOSRD
preplace inst xlconstant_1 -pg 1 -lvl 5 -x 1640 -y 2760 -defaultsOSRD -orient R180
preplace inst xlconstant_2 -pg 1 -lvl 5 -x 1640 -y 2860 -defaultsOSRD -orient R180
preplace inst mig_7series_0 -pg 1 -lvl 3 -x 1030 -y 830 -defaultsOSRD
preplace netloc Net 1 1 2 420 1090 800
preplace netloc Net1 1 0 4 30 620 410 450 780 700 1210
preplace netloc ACLK_1 1 0 4 20 410 390 410 810 480 1220
preplace netloc Net2 1 1 2 400 440 800
preplace netloc axi_bram_ctrl_0_bram_clk_a 1 3 2 1260J 120 1510
preplace netloc axi_bram_ctrl_0_bram_we_a 1 3 2 NJ 210 N
preplace netloc axi_bram_ctrl_0_bram_en_a 1 3 2 NJ 170 N
preplace netloc axi_bram_ctrl_0_bram_rst_a 1 3 2 NJ 190 N
preplace netloc blk_mem_gen_0_douta 1 3 2 NJ 150 N
preplace netloc axi_bram_ctrl_0_bram_wrdata_a 1 3 2 NJ 130 N
preplace netloc axi_bram_ctrl_0_bram_addr_a 1 3 1 1260J 60n
preplace netloc xlslice_0_Dout 1 4 1 1510 60n
preplace netloc xlconstant_0_dout 1 5 1 NJ 2660
preplace netloc CPU9444_0_mode_m 1 3 3 NJ 1070 NJ 1070 NJ
preplace netloc CPU9444_0_mode_s 1 3 3 NJ 1090 NJ 1090 NJ
preplace netloc CPU9444_0_mode_u 1 3 3 NJ 1110 NJ 1110 NJ
preplace netloc CPU9444_0_waiting_for_interrupt 1 3 3 NJ 1130 NJ 1130 NJ
preplace netloc axi_quad_spi_0_ip2intc_irpt 1 2 2 850 1210 1210
preplace netloc axi_uartlite_0_interrupt 1 2 2 840 2010 1200
preplace netloc TrivialPLIC_0_s_interrupt 1 2 2 850 950 1220
preplace netloc SimpleVGA_0_VGA_HS 1 3 3 NJ 330 NJ 330 NJ
preplace netloc SimpleVGA_0_VGA_VS 1 3 3 NJ 350 NJ 350 NJ
preplace netloc SimpleVGA_0_VGA_R 1 3 3 NJ 370 NJ 370 NJ
preplace netloc SimpleVGA_0_VGA_G 1 3 3 NJ 390 NJ 390 NJ
preplace netloc SimpleVGA_0_VGA_B 1 3 3 NJ 410 NJ 410 NJ
preplace netloc TrivialPS2_0_interrupt_out 1 2 2 820 1190 1240
preplace netloc TrivialPS2_1_interrupt_out 1 2 2 830 1200 1230
preplace netloc xlconstant_1_dout 1 3 2 1260 2760 NJ
preplace netloc xlconstant_2_dout 1 3 2 NJ 2810 1510J
preplace netloc axi_ethernetlite_0_phy_tx_en 1 3 3 NJ 2950 NJ 2950 NJ
preplace netloc axi_ethernetlite_0_phy_tx_data 1 3 3 NJ 2970 NJ 2970 NJ
preplace netloc phy_rx_data_0_1 1 0 4 NJ 3070 NJ 3070 NJ 3070 1210
preplace netloc phy_rx_clk_0_1 1 0 4 20J 2710 NJ 2710 NJ 2710 1200
preplace netloc phy_dv_0_1 1 0 4 30J 2700 NJ 2700 NJ 2700 1210
preplace netloc axi_ethernetlite_0_ip2intc_irpt 1 2 2 810 710 1250
preplace netloc reset_2 1 0 3 20J 840 NJ 840 NJ
preplace netloc phy_tx_clk_0_1 1 0 4 NJ 3050 NJ 3050 800J 3080 1200
preplace netloc CPU9444_0_peripheral_bus 1 1 3 430 470 NJ 470 1240
preplace netloc axi_uartlite_0_UART 1 3 3 NJ 2290 NJ 2290 NJ
preplace netloc CPU9444_0_memory_bus 1 1 3 440 460 790J 490 1230
preplace netloc axi_interconnect_1_M00_AXI 1 2 1 N 2280
preplace netloc axi_interconnect_0_M01_AXI 1 2 1 750 120n
preplace netloc axi_interconnect_1_M02_AXI 1 2 1 790 2080n
preplace netloc axi_quad_spi_0_SPI_0 1 3 3 NJ 2100 NJ 2100 NJ
preplace netloc axi_interconnect_1_M01_AXI 1 2 1 750 1270n
preplace netloc SimpleVGA_0_interface_aximm 1 1 3 420 10 NJ 10 1250
preplace netloc TrivialPS2_0_ps2_data 1 3 3 NJ 2420 NJ 2420 NJ
preplace netloc TrivialPS2_0_ps2_clock 1 3 3 NJ 2440 NJ 2440 NJ
preplace netloc axi_interconnect_1_M03_AXI 1 2 1 770 2340n
preplace netloc axi_interconnect_1_M04_AXI 1 2 1 760 2360n
preplace netloc TrivialPS2_1_ps2_data 1 3 3 NJ 2580 NJ 2580 NJ
preplace netloc TrivialPS2_1_ps2_clock 1 3 3 NJ 2600 NJ 2600 NJ
preplace netloc axi_ethernetlite_0_MDIO 1 3 3 NJ 2990 NJ 2990 NJ
preplace netloc axi_interconnect_1_M05_AXI 1 2 1 750 2380n
preplace netloc mig_7series_0_DDR3 1 3 3 NJ 770 NJ 770 NJ
preplace netloc sys_diff_clock_1 1 0 3 NJ 820 NJ 820 NJ
preplace netloc axi_interconnect_0_M00_AXI 1 2 1 790 630n
levelinfo -pg 1 0 210 600 1030 1400 1640 1790
pagesize -pg 1 -db -bbox -sgen -180 0 1990 3090
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_main()
cr_bd_main ""
set_property REGISTERED_WITH_MANAGER "1" [get_files main.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files main.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2019} -strategy "Performance_ExplorePostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExplorePostRoutePhysOpt" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "strategy" -value "Performance_ExplorePostRoutePhysOpt" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.bin_file" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
